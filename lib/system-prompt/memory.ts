interface Memory {
  readonly memory_id: string;
  readonly content: string;
  readonly update_time: number;
}

// Memory section generation with combined logic
export const generateMemorySection = (
  memories: Memory[] | null,
  shouldIncludeMemories: boolean = true,
): string => {
  const baseMemoryInstructions = `

<memories>
You may be provided a list of memories. These memories are generated from past conversations with the agent.
They may or may not be correct, so follow them if deemed relevant, but the moment you notice the user correct something you've done based on a memory, or you come across some information that contradicts or augments an existing memory, IT IS CRITICAL that you MUST update/delete the memory immediately using the update_memory tool. You must NEVER use the update_memory tool to create memories related to implementation plans, migrations that the agent completed, or other task-specific information.
If the user EVER contradicts your memory, then it's better to delete that memory rather than updating the memory.
You may create, update, or delete memories based on the criteria from the tool description.
<memory_citation>
You must NEVER reference or cite memory IDs to the user. Memory IDs are for internal use only and should not be mentioned in responses to users.
</memory_citation>`;

  const disabledMemoryMessage = `

<memories>
The \`update_memory\` tool is disabled. Do not send any messages to it.
If the user explicitly asks you to remember something, politely ask them to go to **Settings > Personalization > Memory** to enable memory.
</memories>`;

  if (!shouldIncludeMemories) {
    return disabledMemoryMessage;
  }

  if (!memories || memories.length === 0) {
    return (
      baseMemoryInstructions +
      `
</memories>`
    );
  }

  // Show all memories without sorting
  const memoryContent = memories
    .map((memory) => {
      const date = new Date(memory.update_time).toISOString().split("T")[0];
      return `- [${date}] ${memory.content} (ID: ${memory.memory_id})`;
    })
    .join("\n");

  return `${baseMemoryInstructions}

The following memories were generated by the agent based on the user's interactions with the agent.
        If relevant to the user query, you should follow them as you generate code, answer questions, and search the codebase.
        If you notice that any memory is incorrect, you should update it using the update_memory tool.
        ">
${memoryContent}
</memories>`;
};

export type { Memory };
